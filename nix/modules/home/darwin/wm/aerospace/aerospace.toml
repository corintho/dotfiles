
# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 80

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 20
inner.vertical = 20
outer.bottom = 40
outer.top = 40
outer.left = 60
outer.right = 60

[key-mapping.key-notation-to-key-code]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-left = 'focus left'
ctrl-down = 'focus down'
ctrl-up = 'focus up'
ctrl-right = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-shift-left = 'move left'
ctrl-shift-down = 'move down'
ctrl-shift-up = 'move up'
ctrl-shift-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-b = 'workspace Browsers'
alt-o = 'workspace cOmms'
alt-d = 'workspace Dev'
alt-m = 'workspace Misc'     # In your config, you can drop workspace bindings that you don't need
alt-r = 'workspace Retail'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-b = 'move-node-to-workspace Browsers'
alt-shift-o = 'move-node-to-workspace cOmms'
alt-shift-d = 'move-node-to-workspace Dev'
alt-shift-m = 'move-node-to-workspace Misc'
alt-shift-r = 'move-node-to-workspace Retail'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-shift-f = 'fullscreen'
cmd-shift-f = 'macos-native-fullscreen'

# move cursor to another monitor
alt-ctrl-shift-left = ['focus-monitor --wrap-around prev', 'mode main']
alt-ctrl-shift-right = ['focus-monitor --wrap-around next', 'mode main']

# move window to another monitor
alt-ctrl-shift-cmd-left = [
  'move-node-to-monitor --wrap-around --focus-follows-window prev',
]
alt-ctrl-shift-cmd-right = [
  'move-node-to-monitor --wrap-around --focus-follows-window next',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
b = ['balance-sizes', 'mode main'] # reset layout
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-left = ['join-with left', 'mode main']
alt-shift-down = ['join-with down', 'mode main']
alt-shift-up = ['join-with up', 'mode main']
alt-shift-right = ['join-with right', 'mode main']

# You can see the currently running windows with:
# aerospace list-apps

# Floating windows
[[on-window-detected]]
if.app-id = 'com.tomito.tomito'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'cbg'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = ['layout floating']

# Browsers windows
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = ['move-node-to-workspace Browsers']

# Comms windows
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = ['move-node-to-workspace cOmms']

[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = ['move-node-to-workspace cOmms']

# Misc windows
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace Misc']
